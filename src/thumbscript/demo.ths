#thumbscript
// {
//     f: {
//         500 sleepms
//         "we slept" say
//     } go
//     "Waiting" say
//     
//     {
//         1000 sleepms
//         "canceling" say
//         f cancel
//     } go
// 
//     f wait
//     "waited!" say
// } call

waitn: {
    :futures
    gotOne: 0
    futures {
        :i99 :w
        {
            // :i99 :w
            // w00: w
            // w00 $runId at "looping runid: " swap cc say
            // w00 wait
            
            
            w $runId at "looping runid: " swap cc say
            w wait
            
            // gotOne { breakp } ?
            gotOne { continuep } ?
            1 :gotOne
            futures {
                // dup
                // $runId at "    canceling run id: " swap cc say
                // cancel
                :w99
                w99 $runId at "    cancelling run id: " swap cc say
                w99 cancel
            } local each
        // } local go drop
        } go drop
    } local range
} local

futures: []
3 {
    // :i i :i2
    // "the i is $i" say
    :i
    {
         //  rand sleepms
         500 rand sleepms
         "the i is $i" say
    } go futures push
} local loopn
futures waitn
